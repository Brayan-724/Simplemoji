import { MyColors, MainState } from "../globals.slint";

import { ComboBox } from "./combobox.slint";
import { Input } from "./input.slint";
import { Emoji, EmojiModel } from "./emoji.slint";

@rust-attr(derive(clap::ValueEnum))
export enum SkinTone {
    Default,
    Light,
    MediumLight,
    Medium,
    MediumDark,
    Dark,
}

export global SearchGlobal {
    in-out property<SkinTone> tone: SkinTone.Default;

    callback search(/* search */ string);
    callback change_tone(/* tone */ string);
}

export component Search inherits Rectangle {
    property<[string]> tones: [ "👋", "👋🏻", "👋🏼", "👋🏽", "👋🏾", "👋🏿" ];
    in-out property<string> search-terms;

    init => {
        search-input.focus();
    }

    GridLayout {
        spacing-horizontal: 15px;

        padding-left: 10px;
        padding-right: 10px;
        padding-top: 5px;


        Row {
            Text {
                font-size: 20px;
                text: "🔎";
                vertical-alignment: center;
            }

            search-input := Input {
                text-color: MyColors.foreground;
                background: MyColors.background;

                changed text => {
                    SearchGlobal.search(self.text);
                }
            }

            ComboBox {
                choices: root.tones;
                changed value => {
                    SearchGlobal.change_tone(self.value)
                }
            }
        }
    }
}
